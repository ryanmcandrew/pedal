#:kivy 1.0

# rate_hz float
# depth float
# centre_delay_ms
# feedback
# mix

#: import ew kivy.uix.effectwidget

<ChorusWidget>:
    # BoxLayout:
         
    BoxLayout:
        Slider:
            id: rate_slider
            min: 0.0
            max: 10.0
            step: 0.1
            orientation: 'vertical'
        Label:
            text: 'rate - ' + str(round(rate_slider.value, 1))
    BoxLayout:
        Slider:
            id: depth_slider
            min: 0
            max: 100
            step: 1
            orientation: 'vertical'
        Label:
            text: 'depth - ' + str(round(depth_slider.value, 1))
    BoxLayout:
        Slider:
            id: centre_delay_slider
            min: 0.0
            max: 100.0
            step: 0.1
            orientation: 'vertical'
        Label:
            text: 'centre_delay - ' + str(round(centre_delay_slider.value, 1))
    BoxLayout:
        Slider:
            id: feedback_slider
            min: 0
            max: 100
            step: 0.1
            orientation: 'vertical'
        Label:
            text: 'feedback - ' + str(round(feedback_slider.value, 1))
    BoxLayout:
        Slider:
            id: mix_slider
            min: 0
            max: 1
            step: 0.1
            orientation: 'vertical'
        Label:
            text: 'mix - ' + str(round(mix_slider.value, 1))


    BoxLayout:
        Button:
            text:'play'
            on_press:root.play_wav()
            # on_press:root.test_one()
            # on_press:root.chorus()
        Button:
            id: stop_button
            text:'stop'
            on_press:root.stop_wav()
        Button:
            id: reload_button
            text:'reload'
            on_press:root.reload_wav()
        Button:
            id: update_chorus_button
            text: 'update chorus'
            on_press: root.update_chorus(rate_slider.value, depth_slider.value, centre_delay_slider.value, feedback_slider.value, mix_slider.value)
        Slider:
            id: seek_input
            min: 0
            max: 100
            step: 1
            text:'seek'
            orientation: 'vertical'
            on_touch_move: root.seek_wav(seek_input.value)
    BoxLayout:
        # orientation:vertical
        Spinner:
            id: spinner_pick
            values: root.audio_devices()
            # values: ["test", "test2"]
            text: 'audio device'
            size: 300, 44
            size_hint: None, None
            # on_text: root.update_active_audio_device(spinner_pick.value)
            orientation: 'horizontal'